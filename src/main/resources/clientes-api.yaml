openapi: 3.0.1
info:
  title: Ejemplo de API con OpenAPI y Quarkus
  description: API para ClienteT
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Localhost server

components:
  schemas:
    ClienteT:
      type: object
      properties:
        id:
          type: integer
          format: int64
        primerNombre:
          type: string
        primerApellido:
          type: string
        correoElectronico:
          type: string
      required:
        - primerNombre
        - correoElectronico

paths:
  /ClienteT:
    get:
      description: Retorna todos los ClienteT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClienteT"
    post:
      description: Crea un nuevo ClienteT
      requestBody:
        description: ClienteT a crear
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteT"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteT"
  /ClienteT/{id}:
    get:
      description: Retorna un ClienteT por ID
      parameters:
        - name: id
          in: path
          description: ID del ClienteT
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteT"
    put:
      description: Actualiza un ClienteT existente
      parameters:
        - name: id
          in: path
          description: ID del ClienteT
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: ClienteT a actualizar
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteT"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClienteT"
    delete:
      description: Elimina un ClienteT existente
      parameters:
        - name: id
          in: path
          description: ID del ClienteT
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
